// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'Web platformu için DefaultFirebaseOptions yapılandırılmamış.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'iOS platformu için DefaultFirebaseOptions yapılandırılmamış.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'macOS platformu için DefaultFirebaseOptions yapılandırılmamış.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'Windows platformu için DefaultFirebaseOptions yapılandırılmamış.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'Linux platformu için DefaultFirebaseOptions yapılandırılmamış.',
        );
      default:
        throw UnsupportedError(
          'Bu platform için DefaultFirebaseOptions yapılandırılmamış.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'YOUR-ACTUAL-API-KEY',
    appId: 'YOUR-ACTUAL-APP-ID',
    messagingSenderId: 'YOUR-ACTUAL-SENDER-ID',
    projectId: 'mf-master-online',
    storageBucket: 'YOUR-ACTUAL-STORAGE-BUCKET',
  );
}
